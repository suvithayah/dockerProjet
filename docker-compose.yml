
version: "3.8"
services:
  frontend:
    build: ./frontend
    environment:
      REACT_APP_API_HOST: 'http://localhost:4000'
    ports:
      - "4500:80"
    volumes:
      - "./front-nginx.conf:/etc/nginx/templates/default.conf.template"
  backend:
    build: ./backend
    environment:
      PGPASSWORD: esgi
      PGUSER: "esgi"
      PGDATABASE: esgi
      PGHOST: database
      PGPORT: 5432
    ports:
      - "4000:3000"
    depends_on:
      - "database"
  database:
    image: "postgres:latest"
    container_name: "app-database"
    environment:
      POSTGRES_PASSWORD: esgi
      POSTGRES_USER: esgi
    ports:
        - "4100:6100:5432"
    volumes:
      - "./database-init.sql:/docker-entrypoint-initdb.d/init-database.sql"
      - "db-data:/var/lib/postgresql/data"
  database-administration:
    image: "adminer:latest"
    container_name: "app-database-administration"
    image: "adminer"
    ports:
      - "6200:8080"
  mailhog:
    image: "mailhog/mailhog:latest"
    container_name: "app-mail-server"
    ports:
      - "4300:1025"
      - "4400:8025"

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge

volumes:
  db-data: {}
  elasticsearch: